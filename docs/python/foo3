# init.sh: shared conf file(s), including conf/.cnf
# init-pprod.sh
# init-pprod.sh:
# PRODNAME: ()
# prune: 
# pprod: 
# VDATA: DBZH , VDATA1:DBZH
# PTARGET: 
# PDATA: 
# CTARGET: type=C
# CDATA: 
# IDATA: 
# PALETTEKEY: DBZH
# CDATA: DBZH

# radar.rack.comp.sh
## Including radar.rack.comp.sh
# --cSize 800,800
## Including radar.rack.proj.sh
# PROJ=4326
# PROJ=4326
# PROJSTR=( "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs" )
## Including radar.rack.proj.sh
## Exiting radar.rack.proj.sh: proj='--cProj "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"' cart='--cCreate'
# SCHEME=.
# proj='--cProj "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"'
# comp='--cMethod 'MAXIMUM' --cSize 800,800 --cBBox '16,57,35,70' --cProj "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs" '
## Exiting radar.rack.comp.sh
# init-cache.sh
# init-cache.sh <= generate.sh 
# CACHE=0
# ANDRE=
# ANDRECONF=
Script using Rack to make radar data composites.
Usage:
  generate.sh *.h5
  SCHEME=TILE  CONF=<conf> ./generate.sh volume.h5
  SCHEME=TILED CONF=<conf> ./generate.sh volume.h5
  BBOX=16,57,35,70 SIZE=800,800 METHOD=MAXIMUM PROJ='4326' ./generate.sh *.h5
# Reading init-andre.sh.
# Change string literals to actual desired params
#
# ANDRE=''
# Reading rack.radar.image.sh / init-image.sh
# PALETTE=, REFINE= (colors)
# init-image.sh:
# iselect: --select quantity='^DBZH'
# palette: 
# transparent:  
# image: --select quantity='^DBZH'   
# generate.sh INPUTKEYS=


No inputs, re-running 'input.sh' for debugging.
# init-pprod.sh:
# PRODNAME: ()
# prune: 
# pprod: 
# VDATA: DBZH , VDATA1:DBZH
# PTARGET: 
# PDATA: 
# CTARGET: type=C
# CDATA: 
# IDATA: 
# PALETTEKEY: DBZH
# CDATA: DBZH

# radar.rack.comp.sh
## Including radar.rack.comp.sh
# --cSize 500,500
## Including radar.rack.proj.sh
# PROJ=4326
# PROJ=4326
# PROJSTR=( "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs" )
## Including radar.rack.proj.sh
## Exiting radar.rack.proj.sh: proj='--cProj "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"' cart='--cCreate'
# SCHEME=.
# proj='--cProj "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"'
# comp='--cMethod 'MAXIMUM' --cSize 500,500 --cBBox '16,57,35,70' --cProj "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs" '
## Exiting radar.rack.comp.sh
# PROJ=4326
# BBOX=16,57,35,70
# comp=--cMethod 'MAXIMUM' --cSize 500,500 --cBBox '16,57,35,70' --cProj "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs" 
# PPRODNAME=pSweep
# rack --verbose 0 --cMethod 'MAXIMUM' --cSize 500,500 --cBBox '16,57,35,70' --cProj "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs" 
# SITES='filuo'
# Check scope for filuo (26.9008,67.1386) 
# rack --verbose 0 --cMethod 'MAXIMUM' --cSize 500,500 --cBBox '16,57,35,70' --cProj "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"  --/where:lon=26.9008 --/where:lat=67.1386 --/where:nbins=500 --/where:rscale=500  --cBBoxTest 1
FILUO=201708121530_radar.polar.filuo.h5

200 Warning: no inputs.
# BASEPATH=#
# INPUTKEYS=
AUXFORMATS=
[1;33m[WARNING] ProductBase:completeEncoding: quantity (still) empty, odim=what:type=C,what:gain=0,what:offset=0,what:undetect=0,what:nodata=0,what:quantity=,type=C,gain=0,offset=0,undetect=0,nodata=0,quantity=[0m
[1;33m[WARNING] ProductBase:completeEncoding: unknown quantity [], guessing: what:type=C,what:gain=1,what:offset=0,what:undetect=0,what:nodata=255[0m
[1;29m[NOTICE] RadarAccumulator:extract: quantity=UNKNOWN[0m
[1;29m[NOTICE] RadarAccumulator:extract: quantity=UNKNOWN[0m
[1;33m[WARNING] cartesian-extract:extract: dstProduct does not have claimed quantity: [0m
[1;29m[NOTICE] fileio:exec: writing: '201708121530_radar.rack.comp_SIZE=800,800_SITES=filuo.png'[0m
[1;33m[WARNING] resources:setCurrentImage: no paths found with path=data|quality0:65535,quantity=^DBZH,elangle=-90:90,count=1000,elangleMin=-90,elangleMax=90, matcher=data|quality0:65535, skipping...[0m
[1;33m[WARNING] fileio:exec: data not found or empty data with selector: path=data|quality0:65535,quantity=^DBZH,elangle=-90:90,count=1000,elangleMin=-90,elangleMax=90, matcher=data|quality0:65535[0m
rack --cMethod 'MAXIMUM' --cSize 800,800 --cBBox '16,57,35,70' --cProj "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs" --encoding type=C --cInit --script '--select dataset1,quantity=^DBZH$ --select quantity=DBZH --cAdd' --inputPrefix '#' --cExtract dwsc --outputPrefix /home/mpeura/venison/cache/2017/08/12/radar/rack/comp/ --select quantity='^DBZH' -o 201708121530_radar.rack.comp_SIZE=800,800_SITES=filuo.png
COMPOSITE=/home/mpeura/venison/cache/2017/08/12/radar/rack/comp/201708121530_radar.rack.comp_SIZE=800,800_SITES=filuo.png

  HTTP_PATH_PREFIX="nutshell/"
  __module__="__main__"
  __dict__="{'PRODUCT_ROOT': '/home/mpeura/venison/products', 'stderr': <_io.TextIOWrapper name='<stderr>' mode='w' encoding='UTF-8'>, 'stdout': <_io.TextIOWrapper name='<stdout>' mode='w' encoding='UTF-8'>, 'verbosity': 5, 'CACHE_ROOT': '/home/mpeura/venison/cache', 'HTML_ROOT': '/home/mpeura/nutshell/python', 'HTTP_PORT': '8088'}"
  HTTP_NAME=""
  SHELL_INPUT_SCRIPT="input.sh"
  HTML_ROOT="/home/mpeura/nutshell/python"
  SHELL_GENERATOR_SCRIPT="generate.sh"
  PRODUCT_ROOT="/home/mpeura/venison/products"
  stderr="<_io.TextIOWrapper name='<stderr>' mode='w' encoding='UTF-8'>"
  stdout="<_io.TextIOWrapper name='<stdout>' mode='w' encoding='UTF-8'>"
  verbosity="5"
  CACHE_ROOT="/home/mpeura/venison/cache"
  __weakref__="None"
  HTML_TEMPLATE="template.html"
  __doc__="Service designed for generating image and data products served as files 
    "
  HTTP_PORT="8088"
  TIME_DIR_SYNTAX="{YEAR}/{MONTH}/{DAY}"

Requests: ['DELETE', 'MAKE']
