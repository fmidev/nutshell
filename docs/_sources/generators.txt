.. NutShell documentation, description

   
Product generators
==================

In NutShell, a *product generator* is a shell script that computes something with given parameters and
saves the result as a file in a given path. As a precondition, for computation
the generator may need *product inputs* and request NutShell to compute them first. In this sense,
NutShell functions like ``make`` and ``Makefile``, where respective inputs are called *dependencies*.

Each product generator has a unique id consisting of lowercase literals and periods, for example: ``test.image.product``.
Certain directory names will derived from product id, replacing periods with slashes. For example: ``test/image/product``.

The generator has script has a fixed name, ``generate.sh`` .

Setting up product generators
-----------------------------

#. Move to product generator root directory, ``GENERATOR_ROOT`` (See :ref:`configuration-file`)
#. Create shell script file ``generate.sh`` with execution permission.
#. Preferably, use **bash**, starting the script with ``#!/bin/bash`` 
#. Edit the script such that it finally writes its result in path ``$OUTDIR/$OUTFILE``
	   
User-defined variables
''''''''''''''''''''''

- Must not be any of :ref:`variables` (below)
- Must not contain underscores
- Should be short, to keeping resulting filenames reasonably short.

It is recommended that variables contain default values. In **bash**, they can be set for example
as follows::

  if [ "$WIDTH" == '' ]; then
     WIDTH='640'
  fi
  if [ "$HEIGHT" == '' ]; then
     HEIGHT=$WIDTH
  fi

or more compactly::
  
  WIDTH=${WIDTH:-'640'}
  HEIGHT=${HEIGHT:-"$WIDTH"}  # double hyphens to allow expansion

  

Input queries
'''''''''''''

#. Create shell script file ``input.sh`` with execution permission.

- Must not be any of :ref:`system variables`


  

