#!/bin/bash
# -e

# Markus.Peura@fmi.fi

prefix=${prefix:-'/opt'}

source util/vt100utils.sh
source util/utils.sh
#source util/init-config.sh

#unset HTTP_PORT
unset TOMCAT

NUTSHELL_VERSION=${NUTSHELL_VERSION:-$1}
NUTSHELL_VERSION=${NUTSHELL_VERSION:-'tomcat10'}

CONF_FILE="nutshell-${NUTSHELL_VERSION}-${HOSTNAME}.cnf"

read_and_backup_file  $CONF_FILE 


echo "# Conf by $USER@$HOSTNAME on $DATE " > $CONF_FILE
echo >> $CONF_FILE

show_variable prefix

# CONF_NAME=${CONF_ NAME:-'nutweb'}

# Inits

# Needed: ?
case "$NUTSHELL_VERSION" in
    python)
	HTTP_PORT=${HTTP_PORT:-'8080'}
	;;
    tomcat9|tomcat10)
	vt100echo blue "TomCat HTTP server configuration"
	HTTP_PORT=${HTTP_PORT:-'8000'}
	TOMCAT=$NUTSHELL_VERSION
	LOG_FORMAT=${LOG_FORMAT:-'HTML'}
	NUTWEB_NAME=nutshell
	source util/configure-www.sh
	NUTSHELL_JAR_DIR="$HTML_ROOT/WEB-INF/lib"
	show_variable NUTSHELL_JAR_DIR
	write_variable NUTSHELL_JAR_DIR $NUTSHELL_JAR_DIR "Location of NutShell java package"
	;;
    java)
	ask_variable NUTSHELL_JAR_DIR "$prefix/nutshell" "Location of NutShell java package"
	;;
    docker-java)
	# NUTSHELL_ROOT='/opt/nutshell'
	NUTSHELL_JAR_DIR='/opt/nutshell'
	CMD_SCRIPT_DIR=/usr/local/bin
	;;
    *)
	vt100echo red "Unsupported \$NUTSHELL_VERSION=$NUTSHELL_VERSION"
	exit 1
esac


vt100echo green "Accept or modify the following directories"
# echo "Directory and url paths must have a leading but no trailing slash '/'."
echo 


# Root dir of this installation package
PKG_ROOT=`pwd -P`






# vt100echo blue "Default directory for Nutshell product generators and files"
# ask_variable NUTSHELL_ROOT "$NUTSHELL_ROOT" "Default directory for Nutshell product generators and files"
# Directory for nutshell.cnf, default dir for cache, storage, products"


if [ "$NUTSHELL_VERSION" != 'docker-java' ]; then

    ask_variable PRODUCT_ROOT "/opt/products" "Root directory for product generators"
    check_dir_syntax PRODUCT_ROOT

    ask_variable CACHE_ROOT "${PRODUCT_ROOT%/*}/cache" "Root directory for cache"
    check_dir_syntax CACHE_ROOT

    ask_variable STORAGE_ROOT "${CACHE_ROOT%/*}/storage" "Root directory for rolling archive (optional, user-controlled)"
    check_dir_syntax STORAGE_ROOT

    ask_variable TIMEOUT "30" "Seconds to wait for the file being generated by another process."

    ask_variable GROUP_ID "" "Numeric group id (gid) for files and dirs. (Default: gid of CACHE_ROOT. Try: getent group <group>)"
    ask_variable DIR_PERMS   "rwxrwxr-x" "Permissions for cache directories created by the system"
    ask_variable FILE_PERMS  "rw-rw-r--" "Permissions for cache files created by the system"
    ask_variable UMASK ""    "Defines the file permissions created by a product generator. (optional)"

    #vt100echo cyan "Current \$PATH=$PATH"
    show_variable PATH
    ask_variable PATH_EXT "" "Command path extension 'dir:dir2:dir3...'"

    ask_variable CMD_SCRIPT_DIR '/usr/local/bin' "Directory for 'nutshell' executable script. (Leave empty if not used.)"
    check_dir_syntax CMD_SCRIPT_DIR

    LOG_FORMAT=${LOG_FORMAT:-'VT100'}
    LOG_STYLE=${LOG_STYLE:-'COLOUR,URLS'}
    LOG_OLD="$LOG_FORMAT $LOG_STYLE"
    LOG_OLD=( ${LOG_OLD//,/ } )
    LOG_OLD="${LOG_OLD[*]}"
    LOG_OLD=${LOG_OLD// /,}
    ask_variable LOG_SERVER_PATH "" "Top-level log file. (empty = automatic)."
    ask_variable LOG_SERVER "$LOG_OLD" "Log formatting: (use) COLOUR, (convert) URLS"
    ask_variable LOG_TASKS  "$LOG_SERVER" "Log formatting: (use) COLOUR, (convert) URLS"

    HTML_TEMPLATE=${HTML_TEMPLATE:-'style/template.html'}
    write_variable  HTML_TEMPLATE $HTML_TEMPLATE  "Layout file that embeds any HTML page requested"
    
fi

# ask_variable LOG_FORMAT "VT100" "Log formatting: (plain) TEXT, VT100 (text), HTML or DEFAULT"
# ask_variable LOG_STYLE "COLOUR,URLS" "Log formatting: (use) COLOUR, (convert) URLS"



echo
vt100echo green "Resulting configuration: "
echo "---------------------------------"
cat $CONF_FILE
echo "---------------------------------"



vt100echo green "Wrote: $CONF_FILE "

vt100echo green,dim "Continue with:"
vt100echo green,dim "util/install-nutshell.sh $NUTSHELL_VERSION"

